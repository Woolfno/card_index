name: PyTest

on: push

permissions: 
  contents: read
  pages: write
  id-token: write

jobs:
  download-history:
    name: Download history
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - run: |
          ARTIFACT_ID=$(curl -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/Woolfno/card_index/actions/artifacts?name=allure-results" \
            | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);")
          curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/Woolfno/card_index/actions/artifacts/$ARTIFACT_ID/zip \
            -o artifacts.zip
          REPORT_ID=$(curl -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/Woolfno/card_index/actions/artifacts?name=github-pages" \
            | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);")
          curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/Woolfno/card_index/actions/artifacts/$REPORT_ID/zip \
            -o pages.zip
      - run: | 
          mkdir allure-results 
          unzip artifacts.zip -d allure-results
      - run: |
          mkdir old_pages pages_history 
          unzip pages.zip -d old_pages 
          tar -xvf old_pages/artifact.tar -C pages_history
      - run: |
          cp pages_history/history/* allure-results 
          cp -r pages_history/history allure-results
      - name: Store allure history
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 1              

  test:
    name: Test app
    needs: download-history
    runs-on: ubuntu-latest
    services:
        postgres:
            image: postgres:15
            env:
                POSTGRES_USER: postgres
                POSTGRES_PASSWORD: postgres
                POSTGRES_DB: cardindex_test
            ports:
                - 5432:5432  
    env:
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/cardindex_test"  
    steps:
        - name: Checkout repository
          uses: actions/checkout@v4
        - name: Setup python
          uses: actions/setup-python@v5
          with:
            python-version: "3.12"
        - name: Install dependencies
          run: |
            pip install poetry
            poetry config virtualenvs.create false
            poetry install --no-root
        - name: Download all workflow run artifacts
          uses: actions/download-artifact@v4
        - name: Run tests        
          run: poetry run pytest --alluredir=allure-results
          continue-on-error: true
        - name: Store Allure results
          uses: actions/upload-artifact@v4
          with:
            name: allure-results
            path: allure-results
            retention-days: 1              
  
  generate_report:
    name: Generate report
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Setup java
        uses: actions/setup-java@v3
        with:          
          java-version: "21"
          distribution: "microsoft"
      - name: Setup Allure
        run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz 
          sudo tar -zxvf allure-2.23.1.tgz -C /opt/ 
          sudo ln -s /opt/allure-2.23.1/bin/allure /usr/bin/allure
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      - run: allure generate -c allure-results -o _site
      - name: Store generated report
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site
          retention-days: 1              

  publish_report:
    name: Report publication
    needs: generate_report
    runs-on: ubuntu-latest
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
      - name: Deploy GitHub Pages site
        id: deployment
        uses: actions/deploy-pages@v4   
